trigger:
  branches:
    include:
      - release/miniclient/v*
      - refs/release/miniclient/v*

pool:
  vmImage: "ubuntu-latest"

variables:
  azureServiceConnection: "azure-rm-andaha-dev-connection"
  containerRegistryConnection: "andaha-container-reg-connection"
  bicepTemplateFile: "src/WebApps/MiniClient/pipeline/bicep/miniclient-main.bicep"
  nodeModulesCachePath: $(System.DefaultWorkingDirectory)/src/WebApps/MiniClient/Andaha.WebApps.MiniClient/node_modules

name: "$(Build.SourceBranchName)"

stages:
- stage: build
  displayName: Build
  jobs:
    - job: build
      steps:
      - task: Cache@2
        displayName: "cache npm packages"
        inputs:
          key: 'npm | "$(Agent.OS)" | src/WebApps/MiniClient/Andaha.WebApps.MiniClient/package-lock.json'
          restoreKeys: 'npm | "$(Agent.OS)"'
          path: "$(nodeModulesCachePath)"
          cacheHitVar: CACHE_RESTORED

      - task: Npm@1
        displayName: "install typescript"
        inputs:
          command: custom
          verbose: false
          customCommand: "install -D typescript"

      - task: Npm@1
        displayName: "npm install"
        condition: ne(variables.CACHE_RESTORED, 'true')
        inputs:
          command: custom
          workingDir: src/WebApps/MiniClient/Andaha.WebApps.MiniClient
          verbose: false
          customCommand: ci

      - task: Npm@1
        displayName: "npm build"
        inputs:
          command: custom
          workingDir: src/WebApps/MiniClient/Andaha.WebApps.MiniClient
          verbose: false
          customCommand: run build

      - task: CopyFiles@2
        displayName: "Add binaries to Staging Directory"
        inputs:
          SourceFolder: src/WebApps/MiniClient/Andaha.WebApps.MiniClient/dist/andaha.web-apps.mini-client/
          TargetFolder: "$(Build.ArtifactStagingDirectory)/"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact"    

- stage: deploy_dev
  displayName: Deploy to dev
  dependsOn: build
  jobs:
  - job: deployment
    steps:
    - task: AzureCLI@2
      displayName: 'Infrastructure provisioning'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group andaha-dev --template-file $(bicepTemplateFile)

    - task: AzureCLI@2
      displayName: Set appsetting variables
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "az deployment group show --resource-group andaha-dev --name miniclient-main"
          deploymentoutputs=$(az deployment group show --resource-group andaha-dev --name miniclient-main --query properties.outputs)
          echo $deploymentoutputs | jq -c '. | to_entries[] | [.key, .value.value]' |
            while IFS=$"\n" read -r c; do
              outputname=$(echo "$c" | jq -r '.[0]')
              outputvalue=$(echo "$c" | jq -r '.[1]')
              echo "Set variable $outputname=$outputvalue"
              echo "##vso[task.setvariable variable=$outputname]$outputvalue"
          done

    - task: AzureCLI@1
      displayName: 'Delete app from Blobstorage'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptLocation: inlineScript
        inlineScript: |
          az storage blob delete-batch --source '$web' --account-name $(storageAccountName)

    - task: FileTransform@1
      displayName: 'App config substitution'
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)/drop/assets/appConfig/'
        fileType: json
        targetFiles: appConfig.json

    - task: AzureFileCopy@4
      displayName: 'Copy Frontend to Blobstorage'
      inputs:
        SourcePath: '$(System.DefaultWorkingDirectory)/drop/*'
        azureSubscription: $(azureServiceConnection)
        Destination: 'AzureBlob'
        storage: $(storageAccountName)
        ContainerName: '$web'
        AdditionalArgumentsForBlobCopy: '/Y /SetContentType /S'


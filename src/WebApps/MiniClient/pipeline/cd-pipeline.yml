trigger:
  branches:
    include:
      - release/miniclient/v*
      - refs/release/miniclient/v*

pool:
  vmImage: "ubuntu-latest"

variables:
  azureServiceConnection: "azure-rm-andaha-dev-connection"
  containerRegistryConnection: "andaha-container-reg-connection"
  bicepTemplateFile: "src/WebApps/MiniClient/pipeline/bicep/miniclient-main.bicep"

name: "$(Build.SourceBranchName)"

stages:
- stage: build
  displayName: Build
  jobs:
    - job: build
      steps:
      - task: Npm@1
        displayName: "install typescript"
        inputs:
          command: custom
          verbose: false
          customCommand: "install -D typescript"

      - task: Npm@1
        displayName: "npm install"
        inputs:
          command: custom
          workingDir: src/WebApps/MiniClient/Andaha.WebApps.MiniClient
          verbose: false
          customCommand: ci

      - task: Npm@1
        displayName: "npm build"
        inputs:
          command: custom
          workingDir: src/WebApps/MiniClient/Andaha.WebApps.MiniClient
          verbose: false
          customCommand: run build

      - task: CopyFiles@2
        displayName: "Add binaries to Staging Directory"
        inputs:
          SourceFolder: src/WebApps/MiniClient/Andaha.WebApps.MiniClient/dist/andaha.web-apps.mini-client/
          TargetFolder: "$(Build.ArtifactStagingDirectory)/"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact"    

- stage: deploy_dev
  displayName: Deploy to dev
  dependsOn: build
  jobs:
  - job: deployment
    steps:
    - task: AzureCLI@2
      displayName: 'Infrastructure provisioning'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group andaha-dev --template-file $(bicepTemplateFile)

    - task: AzureCLI@1
      displayName: 'Delete app from Blobstorage'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptLocation: inlineScript
        inlineScript: 'az storage blob delete-batch -s "$web" --account-name $(StorageAccountName)'

    - task: PowerShell@2
      displayName: Set appsetting variables
      inputs:
        targetType: inline
        script: |
          Write-Host "Replace appsettings"
          Write-Host (Get-AzResourceGroupDeployment `
            -ResourceGroupName andaha-dev `
            -Name miniclient-main).Outputs.storageAccountName.value
          $deploymentOutput = $((Get-AzResourceGroupDeployment `
            -ResourceGroupName andaha-dev `
            -Name miniclient-main).Outputs)
          [string] $storageAccountName = $deploymentOutput.storageAccountName.value
          [string] $gatewayBaseUrl = "https://ocelot-gateway-dev." + $deploymentOutput.containerAppEnvironmentDomain.value
          Write-Host "Set apiBaseUrl to '$gatewayBaseUrl'"
          Write-Host "##vso[task.setvariable variable=apiBaseUrl]$gatewayBaseUrl"

    - task: FileTransform@1
      displayName: 'App config substitution'
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)/drop/assets/appConfig/'
        fileType: json
        targetFiles: appConfig.json

    - task: AzureFileCopy@4
      displayName: 'Copy Frontend to Blobstorage'
      inputs:
        SourcePath: '$(System.DefaultWorkingDirectory)/drop/*'
        azureSubscription: $(azureServiceConnection)
        Destination: 'AzureBlob'
        storage: $(StorageAccountName)
        ContainerName: '$web'
        AdditionalArgumentsForBlobCopy: '/Y /SetContentType /S'

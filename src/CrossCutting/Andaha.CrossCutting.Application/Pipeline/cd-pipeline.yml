trigger:
  branches:
    include:
      - release/crosscutting/v*
      - refs/release/crosscutting/v*

pool:
  vmImage: "ubuntu-latest"

variables:
  buildConfiguration: "Release"
  nugetFeed: "andaha/andaha-feed"

name: "$(Build.SourceBranchName)"

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core 7'
    inputs:
      packageType: sdk
      version: 7.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: PowerShell@2
    displayName: set version environment variable
    inputs:
      targetType: inline
      script: |
        [string] $version = "$(Build.SourceBranchName)".SubString(1)
        Write-Host "Set version to '$version'"
        Write-Host "##vso[task.setvariable variable=Version]$version"

  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: restore
      projects: '**/Andaha.CrossCutting.Application.csproj'

  - task: DotNetCoreCLI@2
    displayName: build
    inputs:
      command: "build"
      projects: '**/Andaha.CrossCutting.Application.csproj'
      arguments: --configuration $(BuildConfiguration)

  - task: DotNetCoreCLI@2
    displayName: pack
    inputs:
      command: pack
      publishWebProjects: false
      projects: '**/Andaha.CrossCutting.Application.csproj'
      arguments: --output $(Build.ArtifactStagingDirectory)/
      zipAfterPublish: True
      searchPatternPack: '**/Andaha.CrossCutting.Application.csproj'
      packDestination: '$(Build.ArtifactStagingDirectory)'
      versioningScheme: byEnvVar
      versionEnvVar: Version

  - task: DotNetCoreCLI@2
    displayName: dotnet nuget push
    inputs:
      command: push
      feedPublish: $(nugetFeed)
